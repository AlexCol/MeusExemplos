1.
Baixar o pacote Microsoft.AspNetCore.Authentication.JwtBearer.

2.
Colocar em 'Program.cs' os comandos (OBS: antes de var app = builder.Build();):
builder.Services.AddAuthentication(x =>
{
    x.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;
    x.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;
}).AddJwtBearer(options =>
{
    options.TokenValidationParameters = new TokenValidationParameters()
    {
        ValidIssuer = builder.Configuration["JwtBearerTokenSettings:Issuer"],
        ValidAudience = builder.Configuration["JwtBearerTokenSettings:Audience"],
        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(builder.Configuration["JwtBearerTokenSettings:SecretKey"])),
        ClockSkew = TimeSpan.Zero,
        ValidateIssuer = true,
        ValidateAudience = true,
        ValidateLifetime = true,
        ValidateIssuerSigningKey = true,

    };
});

//!padrão
//builder.Services.AddAuthorization();
// Add services to the container.
builder.Services.AddAuthorization(options =>
{
    options.FallbackPolicy = new AuthorizationPolicyBuilder()
        .AddAuthenticationSchemes(JwtBearerDefaults.AuthenticationScheme)
        .RequireAuthenticatedUser()
        .Build();
});


3.
Colocar em 'Program.cs' os comandos (OBS: na ordem apresentada, e antes de app.MapControllers();):
app.UseAuthentication();
app.UseAuthorization();

4.
Criar um 'UserRequest', onde vem o usuário e senha (ex.LoginViewModel.cs).

5.
Criar endpoint de solicitação do token (exemplo em "CriaTokenAutenticacao.cs").
--Lembrar de manter o [AllowAnonymous] pra permitir execução dele sem precisar estar autenticado